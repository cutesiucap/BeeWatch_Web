//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API_Local.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BeeWatchDBEntities : DbContext
    {
        public BeeWatchDBEntities()
            : base("name=BeeWatchDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account_Type> Account_Type { get; set; }
        public virtual DbSet<Accounts> Accounts { get; set; }
        public virtual DbSet<Action> Action { get; set; }
        public virtual DbSet<Address> Address { get; set; }
        public virtual DbSet<Address_District> Address_District { get; set; }
        public virtual DbSet<Address_Province> Address_Province { get; set; }
        public virtual DbSet<Authoriza> Authoriza { get; set; }
        public virtual DbSet<CartDetails> CartDetails { get; set; }
        public virtual DbSet<Carts> Carts { get; set; }
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<Discounts> Discounts { get; set; }
        public virtual DbSet<Firms> Firms { get; set; }
        public virtual DbSet<Hot_Trend> Hot_Trend { get; set; }
        public virtual DbSet<Image> Image { get; set; }
        public virtual DbSet<LogInHistories> LogInHistories { get; set; }
        public virtual DbSet<OrderDetails> OrderDetails { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<Phone> Phone { get; set; }
        public virtual DbSet<Sellers> Sellers { get; set; }
        public virtual DbSet<Sex> Sex { get; set; }
        public virtual DbSet<Shop_Seller> Shop_Seller { get; set; }
        public virtual DbSet<Shops> Shops { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TypeDiscounts> TypeDiscounts { get; set; }
        public virtual DbSet<Watches> Watches { get; set; }
        public virtual DbSet<Watches_Categories> Watches_Categories { get; set; }
        public virtual DbSet<view_Account> view_Account { get; set; }
        public virtual DbSet<view_AccountType> view_AccountType { get; set; }
        public virtual DbSet<view_Action> view_Action { get; set; }
        public virtual DbSet<view_AllCartDetails> view_AllCartDetails { get; set; }
        public virtual DbSet<view_AllOrder> view_AllOrder { get; set; }
        public virtual DbSet<view_AllOrderDetail> view_AllOrderDetail { get; set; }
        public virtual DbSet<view_Authoriza> view_Authoriza { get; set; }
        public virtual DbSet<view_Cart> view_Cart { get; set; }
        public virtual DbSet<view_CartDetailHome> view_CartDetailHome { get; set; }
        public virtual DbSet<view_CartDetails> view_CartDetails { get; set; }
        public virtual DbSet<view_Categories> view_Categories { get; set; }
        public virtual DbSet<view_District> view_District { get; set; }
        public virtual DbSet<view_Firm> view_Firm { get; set; }
        public virtual DbSet<view_OrderCancel> view_OrderCancel { get; set; }
        public virtual DbSet<view_OrderDetail> view_OrderDetail { get; set; }
        public virtual DbSet<view_Orders> view_Orders { get; set; }
        public virtual DbSet<view_OrdertoComplete> view_OrdertoComplete { get; set; }
        public virtual DbSet<view_OrdertoConfirm> view_OrdertoConfirm { get; set; }
        public virtual DbSet<view_OrdertoShip> view_OrdertoShip { get; set; }
        public virtual DbSet<view_Province> view_Province { get; set; }
        public virtual DbSet<view_Sex> view_Sex { get; set; }
        public virtual DbSet<view_UserSeller> view_UserSeller { get; set; }
        public virtual DbSet<view_WatchDetails> view_WatchDetails { get; set; }
    
        [DbFunction("BeeWatchDBEntities", "fn_CheckLockUser")]
        public virtual IQueryable<fn_CheckLockUser_Result> fn_CheckLockUser(Nullable<bool> @lock)
        {
            var lockParameter = @lock.HasValue ?
                new ObjectParameter("lock", @lock) :
                new ObjectParameter("lock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_CheckLockUser_Result>("[BeeWatchDBEntities].[fn_CheckLockUser](@lock)", lockParameter);
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_LoadBill")]
        public virtual IQueryable<fn_LoadBill_Result> fn_LoadBill(Nullable<int> idAccount, string username)
        {
            var idAccountParameter = idAccount.HasValue ?
                new ObjectParameter("idAccount", idAccount) :
                new ObjectParameter("idAccount", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_LoadBill_Result>("[BeeWatchDBEntities].[fn_LoadBill](@idAccount, @username)", idAccountParameter, usernameParameter);
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_LoadBillforAccept")]
        public virtual IQueryable<fn_LoadBillforAccept_Result> fn_LoadBillforAccept()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_LoadBillforAccept_Result>("[BeeWatchDBEntities].[fn_LoadBillforAccept]()");
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_LoadBillforCancel")]
        public virtual IQueryable<fn_LoadBillforCancel_Result> fn_LoadBillforCancel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_LoadBillforCancel_Result>("[BeeWatchDBEntities].[fn_LoadBillforCancel]()");
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_LoadBillforShipper")]
        public virtual IQueryable<fn_LoadBillforShipper_Result> fn_LoadBillforShipper()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_LoadBillforShipper_Result>("[BeeWatchDBEntities].[fn_LoadBillforShipper]()");
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_LoadFirm")]
        public virtual IQueryable<fn_LoadFirm_Result> fn_LoadFirm(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_LoadFirm_Result>("[BeeWatchDBEntities].[fn_LoadFirm](@id, @name)", idParameter, nameParameter);
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_LoadSex")]
        public virtual IQueryable<fn_LoadSex_Result> fn_LoadSex(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_LoadSex_Result>("[BeeWatchDBEntities].[fn_LoadSex](@id, @name)", idParameter, nameParameter);
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_LoadWatchBill")]
        public virtual IQueryable<fn_LoadWatchBill_Result> fn_LoadWatchBill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_LoadWatchBill_Result>("[BeeWatchDBEntities].[fn_LoadWatchBill]()");
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_PhanTrang")]
        public virtual IQueryable<fn_PhanTrang_Result> fn_PhanTrang(Nullable<int> num_offset, Nullable<int> num_next)
        {
            var num_offsetParameter = num_offset.HasValue ?
                new ObjectParameter("num_offset", num_offset) :
                new ObjectParameter("num_offset", typeof(int));
    
            var num_nextParameter = num_next.HasValue ?
                new ObjectParameter("num_next", num_next) :
                new ObjectParameter("num_next", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_PhanTrang_Result>("[BeeWatchDBEntities].[fn_PhanTrang](@num_offset, @num_next)", num_offsetParameter, num_nextParameter);
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_SearchWatch")]
        public virtual IQueryable<fn_SearchWatch_Result> fn_SearchWatch(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SearchWatch_Result>("[BeeWatchDBEntities].[fn_SearchWatch](@Name)", nameParameter);
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_UserSeller")]
        public virtual IQueryable<fn_UserSeller_Result> fn_UserSeller()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_UserSeller_Result>("[BeeWatchDBEntities].[fn_UserSeller]()");
        }
    
        [DbFunction("BeeWatchDBEntities", "fn_WatchMaxDeal")]
        public virtual IQueryable<fn_WatchMaxDeal_Result> fn_WatchMaxDeal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_WatchMaxDeal_Result>("[BeeWatchDBEntities].[fn_WatchMaxDeal]()");
        }
    
        public virtual int ChangePassword(Nullable<int> id, string username, string old_pass, string new_pass, string repassword)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var old_passParameter = old_pass != null ?
                new ObjectParameter("old_pass", old_pass) :
                new ObjectParameter("old_pass", typeof(string));
    
            var new_passParameter = new_pass != null ?
                new ObjectParameter("new_pass", new_pass) :
                new ObjectParameter("new_pass", typeof(string));
    
            var repasswordParameter = repassword != null ?
                new ObjectParameter("repassword", repassword) :
                new ObjectParameter("repassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangePassword", idParameter, usernameParameter, old_passParameter, new_passParameter, repasswordParameter);
        }
    
        public virtual int sp_AddCartDetail(Nullable<int> idcart, Nullable<int> idwatch, Nullable<int> count)
        {
            var idcartParameter = idcart.HasValue ?
                new ObjectParameter("idcart", idcart) :
                new ObjectParameter("idcart", typeof(int));
    
            var idwatchParameter = idwatch.HasValue ?
                new ObjectParameter("idwatch", idwatch) :
                new ObjectParameter("idwatch", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddCartDetail", idcartParameter, idwatchParameter, countParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_ChangeInfo(string username, string password, string newpass, string avt, string email, string fullname)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var newpassParameter = newpass != null ?
                new ObjectParameter("newpass", newpass) :
                new ObjectParameter("newpass", typeof(string));
    
            var avtParameter = avt != null ?
                new ObjectParameter("avt", avt) :
                new ObjectParameter("avt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("fullname", fullname) :
                new ObjectParameter("fullname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChangeInfo", usernameParameter, passwordParameter, newpassParameter, avtParameter, emailParameter, fullnameParameter);
        }
    
        public virtual int sp_ChangeStatusDiscount(Nullable<System.DateTime> ngay)
        {
            var ngayParameter = ngay.HasValue ?
                new ObjectParameter("Ngay", ngay) :
                new ObjectParameter("Ngay", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChangeStatusDiscount", ngayParameter);
        }
    
        public virtual int sp_CheckLogin(Nullable<int> id, string username, string password)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CheckLogin", idParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int sp_CheckWatch(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CheckWatch", idParameter, nameParameter);
        }
    
        public virtual int sp_ConfirmBill(Nullable<int> idorder)
        {
            var idorderParameter = idorder.HasValue ?
                new ObjectParameter("idorder", idorder) :
                new ObjectParameter("idorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConfirmBill", idorderParameter);
        }
    
        public virtual int sp_ConfirmForCancel(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConfirmForCancel", idParameter);
        }
    
        public virtual int sp_ConfirmForComplete(Nullable<int> idorder)
        {
            var idorderParameter = idorder.HasValue ?
                new ObjectParameter("idorder", idorder) :
                new ObjectParameter("idorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConfirmForComplete", idorderParameter);
        }
    
        public virtual int sp_ConfirmForShip(Nullable<int> idorder)
        {
            var idorderParameter = idorder.HasValue ?
                new ObjectParameter("idorder", idorder) :
                new ObjectParameter("idorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConfirmForShip", idorderParameter);
        }
    
        public virtual int sp_ConfirmOrder(Nullable<int> idBill)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ConfirmOrder", idBillParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_DeleteCategory(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteCategory", idParameter, nameParameter);
        }
    
        public virtual int sp_DeleteFirm(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteFirm", idParameter, nameParameter);
        }
    
        public virtual int sp_DeleteSex(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteSex", idParameter, nameParameter);
        }
    
        public virtual int sp_DropCartDetails(Nullable<int> idCart, Nullable<int> idWatch)
        {
            var idCartParameter = idCart.HasValue ?
                new ObjectParameter("idCart", idCart) :
                new ObjectParameter("idCart", typeof(int));
    
            var idWatchParameter = idWatch.HasValue ?
                new ObjectParameter("idWatch", idWatch) :
                new ObjectParameter("idWatch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DropCartDetails", idCartParameter, idWatchParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_GuiMaXacNhan(string email, ObjectParameter code)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GuiMaXacNhan", emailParameter, code);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_InserCategories(string name, string detail)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("detail", detail) :
                new ObjectParameter("detail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InserCategories", nameParameter, detailParameter);
        }
    
        public virtual int sp_InserFirm(string newName, string url)
        {
            var newNameParameter = newName != null ?
                new ObjectParameter("newName", newName) :
                new ObjectParameter("newName", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InserFirm", newNameParameter, urlParameter);
        }
    
        public virtual int sp_InsertAccount(string username, string password, string avt, string email, string fullname, string sex, string address_province, string address_district, string address_detail, ObjectParameter id)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var avtParameter = avt != null ?
                new ObjectParameter("avt", avt) :
                new ObjectParameter("avt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("fullname", fullname) :
                new ObjectParameter("fullname", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var address_provinceParameter = address_province != null ?
                new ObjectParameter("address_province", address_province) :
                new ObjectParameter("address_province", typeof(string));
    
            var address_districtParameter = address_district != null ?
                new ObjectParameter("address_district", address_district) :
                new ObjectParameter("address_district", typeof(string));
    
            var address_detailParameter = address_detail != null ?
                new ObjectParameter("address_detail", address_detail) :
                new ObjectParameter("address_detail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAccount", usernameParameter, passwordParameter, avtParameter, emailParameter, fullnameParameter, sexParameter, address_provinceParameter, address_districtParameter, address_detailParameter, id);
        }
    
        public virtual int sp_InsertCartDetails(Nullable<int> idCart, Nullable<int> idWatch)
        {
            var idCartParameter = idCart.HasValue ?
                new ObjectParameter("idCart", idCart) :
                new ObjectParameter("idCart", typeof(int));
    
            var idWatchParameter = idWatch.HasValue ?
                new ObjectParameter("idWatch", idWatch) :
                new ObjectParameter("idWatch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertCartDetails", idCartParameter, idWatchParameter);
        }
    
        public virtual int sp_InsertDiscount(string code, Nullable<int> id_Type, Nullable<double> value_percent, Nullable<double> value_sub, Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var id_TypeParameter = id_Type.HasValue ?
                new ObjectParameter("id_Type", id_Type) :
                new ObjectParameter("id_Type", typeof(int));
    
            var value_percentParameter = value_percent.HasValue ?
                new ObjectParameter("value_percent", value_percent) :
                new ObjectParameter("value_percent", typeof(double));
    
            var value_subParameter = value_sub.HasValue ?
                new ObjectParameter("value_sub", value_sub) :
                new ObjectParameter("value_sub", typeof(double));
    
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertDiscount", codeParameter, id_TypeParameter, value_percentParameter, value_subParameter, datefromParameter, datetoParameter);
        }
    
        public virtual int sp_InsertNewOrder(Nullable<int> id_shop, Nullable<int> id_account, Nullable<int> address_province, Nullable<int> address_district, string address_detail, Nullable<int> count, Nullable<double> sum, Nullable<double> ship_fee, Nullable<int> id_discount, string payment)
        {
            var id_shopParameter = id_shop.HasValue ?
                new ObjectParameter("id_shop", id_shop) :
                new ObjectParameter("id_shop", typeof(int));
    
            var id_accountParameter = id_account.HasValue ?
                new ObjectParameter("id_account", id_account) :
                new ObjectParameter("id_account", typeof(int));
    
            var address_provinceParameter = address_province.HasValue ?
                new ObjectParameter("address_province", address_province) :
                new ObjectParameter("address_province", typeof(int));
    
            var address_districtParameter = address_district.HasValue ?
                new ObjectParameter("address_district", address_district) :
                new ObjectParameter("address_district", typeof(int));
    
            var address_detailParameter = address_detail != null ?
                new ObjectParameter("address_detail", address_detail) :
                new ObjectParameter("address_detail", typeof(string));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var sumParameter = sum.HasValue ?
                new ObjectParameter("sum", sum) :
                new ObjectParameter("sum", typeof(double));
    
            var ship_feeParameter = ship_fee.HasValue ?
                new ObjectParameter("ship_fee", ship_fee) :
                new ObjectParameter("ship_fee", typeof(double));
    
            var id_discountParameter = id_discount.HasValue ?
                new ObjectParameter("id_discount", id_discount) :
                new ObjectParameter("id_discount", typeof(int));
    
            var paymentParameter = payment != null ?
                new ObjectParameter("payment", payment) :
                new ObjectParameter("payment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertNewOrder", id_shopParameter, id_accountParameter, address_provinceParameter, address_districtParameter, address_detailParameter, countParameter, sumParameter, ship_feeParameter, id_discountParameter, paymentParameter);
        }
    
        public virtual int sp_InsertOrderDetails(Nullable<int> idOrder, Nullable<int> idWatch)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("idOrder", idOrder) :
                new ObjectParameter("idOrder", typeof(int));
    
            var idWatchParameter = idWatch.HasValue ?
                new ObjectParameter("idWatch", idWatch) :
                new ObjectParameter("idWatch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertOrderDetails", idOrderParameter, idWatchParameter);
        }
    
        public virtual int sp_InsertSex(string @new)
        {
            var newParameter = @new != null ?
                new ObjectParameter("new", @new) :
                new ObjectParameter("new", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertSex", newParameter);
        }
    
        public virtual int sp_InsertTypeDiscount(Nullable<double> min_bill, Nullable<double> max_discount, string payment_methods)
        {
            var min_billParameter = min_bill.HasValue ?
                new ObjectParameter("min_bill", min_bill) :
                new ObjectParameter("min_bill", typeof(double));
    
            var max_discountParameter = max_discount.HasValue ?
                new ObjectParameter("max_discount", max_discount) :
                new ObjectParameter("max_discount", typeof(double));
    
            var payment_methodsParameter = payment_methods != null ?
                new ObjectParameter("payment_methods", payment_methods) :
                new ObjectParameter("payment_methods", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertTypeDiscount", min_billParameter, max_discountParameter, payment_methodsParameter);
        }
    
        public virtual int sp_InsertWatch(string name, Nullable<int> id_Sex, Nullable<int> id_Firms, string image, Nullable<double> price, Nullable<int> count, string information, string useradd)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var id_SexParameter = id_Sex.HasValue ?
                new ObjectParameter("id_Sex", id_Sex) :
                new ObjectParameter("id_Sex", typeof(int));
    
            var id_FirmsParameter = id_Firms.HasValue ?
                new ObjectParameter("id_Firms", id_Firms) :
                new ObjectParameter("id_Firms", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var informationParameter = information != null ?
                new ObjectParameter("information", information) :
                new ObjectParameter("information", typeof(string));
    
            var useraddParameter = useradd != null ?
                new ObjectParameter("useradd", useradd) :
                new ObjectParameter("useradd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertWatch", nameParameter, id_SexParameter, id_FirmsParameter, imageParameter, priceParameter, countParameter, informationParameter, useraddParameter);
        }
    
        public virtual int sp_InserWatches_Categories(Nullable<int> idwatch, Nullable<int> idcat)
        {
            var idwatchParameter = idwatch.HasValue ?
                new ObjectParameter("idwatch", idwatch) :
                new ObjectParameter("idwatch", typeof(int));
    
            var idcatParameter = idcat.HasValue ?
                new ObjectParameter("idcat", idcat) :
                new ObjectParameter("idcat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InserWatches_Categories", idwatchParameter, idcatParameter);
        }
    
        public virtual int sp_LockAccount(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LockAccount", idParameter, nameParameter);
        }
    
        public virtual int sp_LockWatch(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LockWatch", idParameter, nameParameter);
        }
    
        public virtual int sp_Logout(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Logout", usernameParameter);
        }
    
        public virtual int sp_LogOutAcc(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LogOutAcc", idParameter);
        }
    
        public virtual int sp_RateWatch(Nullable<int> idWatch)
        {
            var idWatchParameter = idWatch.HasValue ?
                new ObjectParameter("idWatch", idWatch) :
                new ObjectParameter("idWatch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RateWatch", idWatchParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_SearchWatch_Result> sp_SearchWatch(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SearchWatch_Result>("sp_SearchWatch", nameParameter);
        }
    
        public virtual int sp_Send(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Send", emailParameter);
        }
    
        public virtual ObjectResult<sp_ThongKeDoanhThu_Result> sp_ThongKeDoanhThu(Nullable<int> idShop, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var idShopParameter = idShop.HasValue ?
                new ObjectParameter("idShop", idShop) :
                new ObjectParameter("idShop", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ThongKeDoanhThu_Result>("sp_ThongKeDoanhThu", idShopParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual int sp_UpdateAccount(string username, string password, string avt, string email, string fullname)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var avtParameter = avt != null ?
                new ObjectParameter("avt", avt) :
                new ObjectParameter("avt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("fullname", fullname) :
                new ObjectParameter("fullname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateAccount", usernameParameter, passwordParameter, avtParameter, emailParameter, fullnameParameter);
        }
    
        public virtual int sp_UpdateFirm(Nullable<int> id, string name, string url)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateFirm", idParameter, nameParameter, urlParameter);
        }
    
        public virtual int sp_UpdatePhone(Nullable<int> idAcc, Nullable<int> idPhone, string phone)
        {
            var idAccParameter = idAcc.HasValue ?
                new ObjectParameter("idAcc", idAcc) :
                new ObjectParameter("idAcc", typeof(int));
    
            var idPhoneParameter = idPhone.HasValue ?
                new ObjectParameter("idPhone", idPhone) :
                new ObjectParameter("idPhone", typeof(int));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePhone", idAccParameter, idPhoneParameter, phoneParameter);
        }
    
        public virtual int sp_UpdateSex(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateSex", idParameter, nameParameter);
        }
    
        public virtual int sp_UpdateWatch(Nullable<int> id, string name, Nullable<int> id_Sex, Nullable<int> id_Firms, string image, Nullable<double> price, Nullable<int> count, string information, string userupdate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var id_SexParameter = id_Sex.HasValue ?
                new ObjectParameter("id_Sex", id_Sex) :
                new ObjectParameter("id_Sex", typeof(int));
    
            var id_FirmsParameter = id_Firms.HasValue ?
                new ObjectParameter("id_Firms", id_Firms) :
                new ObjectParameter("id_Firms", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(double));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var informationParameter = information != null ?
                new ObjectParameter("information", information) :
                new ObjectParameter("information", typeof(string));
    
            var userupdateParameter = userupdate != null ?
                new ObjectParameter("userupdate", userupdate) :
                new ObjectParameter("userupdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateWatch", idParameter, nameParameter, id_SexParameter, id_FirmsParameter, imageParameter, priceParameter, countParameter, informationParameter, userupdateParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_UpStatus(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpStatus", idParameter);
        }
    
        public virtual int SQLAccount_Create(string username, string password, string namerole)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nameroleParameter = namerole != null ?
                new ObjectParameter("namerole", namerole) :
                new ObjectParameter("namerole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SQLAccount_Create", usernameParameter, passwordParameter, nameroleParameter);
        }
    
        public virtual int SQLAccount_KillConnection(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SQLAccount_KillConnection", usernameParameter);
        }
    }
}
